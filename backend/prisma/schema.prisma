// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Perfume {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  brand       String
  description String?
  notes       String?
  rating      Float?
  reviews     Review[]
  perfumeNote PerfumeNote[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  reviews   Review[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id        Int      @id @default(autoincrement())
  content   String
  rating    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  perfumeId Int
  perfume   Perfume  @relation(fields: [perfumeId], references: [id])
}

model Note {
  id       Int           @id @default(autoincrement())
  name     String        @unique
  perfumes PerfumeNote[]
}

model PerfumeNote {
  perfumeId Int
  noteId    Int
  Perfume   Perfume @relation(fields: [perfumeId], references: [id])
  Note      Note    @relation(fields: [noteId], references: [id])

  @@id([perfumeId, noteId])
  @@unique([perfumeId, noteId])
}
